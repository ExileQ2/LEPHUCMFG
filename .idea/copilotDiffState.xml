<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;uses-feature&#10;        android:name=&quot;android.hardware.camera&quot;&#10;        android:required=&quot;false&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AppCompat.Light.DarkActionBar&quot;&#10;        tools:targetApi=&quot;31&quot;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;  &lt;!-- Important for HTTP testing if API is not HTTPS --&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:label=&quot;@string/app_name&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.DarkActionBar&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;        &lt;activity&#10;            android:name=&quot;.AbListActivity&quot;&#10;            android:exported=&quot;false&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.ABTestingActivity&quot;&#10;            android:exported=&quot;false&quot;/&gt;&#10;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;uses-feature&#10;        android:name=&quot;android.hardware.camera&quot;&#10;        android:required=&quot;false&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AppCompat.Light.DarkActionBar&quot;&#10;        tools:targetApi=&quot;31&quot;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;  &lt;!-- Important for HTTP testing if API is not HTTPS --&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:label=&quot;@string/app_name&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.DarkActionBar&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;        &lt;activity&#10;            android:name=&quot;.AbListActivity&quot;&#10;            android:exported=&quot;false&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.ABTestingActivity&quot;&#10;            android:exported=&quot;false&quot;/&gt;&#10;        &lt;activity android:name=&quot;.MachineLogActivity&quot; /&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/MachineLogActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/MachineLogActivity.kt" />
              <option name="originalContent" value="package com.example.lephucmfg&#10;&#10;import android.os.Bundle&#10;import android.widget.EditText&#10;import android.widget.TextView&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.lifecycle.lifecycleScope&#10;import com.example.lephucmfg.network.RetrofitClient&#10;import com.google.gson.annotations.SerializedName&#10;import kotlinx.coroutines.launch&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;import retrofit2.http.GET&#10;import retrofit2.http.Path&#10;&#10;class MachineLogActivity : AppCompatActivity() {&#10;    interface StaffApi {&#10;        @GET(&quot;/api/GetStaff/{staffNo}&quot;)&#10;        suspend fun getStaff(@Path(&quot;staffNo&quot;) staffNo: Int): StaffInfo?&#10;    }&#10;    data class StaffInfo(&#10;        @SerializedName(&quot;fullName&quot;) val fullName: String?,&#10;        @SerializedName(&quot;workJob&quot;) val workJob: String?,&#10;        @SerializedName(&quot;workPlace&quot;) val workPlace: String?&#10;    )&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_machine_log)&#10;&#10;        val edtStaffNo = findViewById&lt;EditText&gt;(R.id.edtStaffNo)&#10;        val txtStaffInfo = findViewById&lt;TextView&gt;(R.id.txtStaffInfo)&#10;&#10;        val api = RetrofitClient.retrofitPublic.create(StaffApi::class.java)&#10;&#10;        edtStaffNo.setOnFocusChangeListener { _, hasFocus -&gt;&#10;            if (!hasFocus) {&#10;                val staffNoStr = edtStaffNo.text.toString().trim()&#10;                if (staffNoStr.isNotEmpty()) {&#10;                    try {&#10;                        val staffNo = staffNoStr.toInt()&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val info = api.getStaff(staffNo)&#10;                                if (info != null) {&#10;                                    txtStaffInfo.text = listOfNotNull(info.fullName, info.workJob, info.workPlace).joinToString(&quot;, &quot;)&#10;                                } else {&#10;                                    txtStaffInfo.setText(R.string.invalid_staff)&#10;                                }&#10;                            } catch (e: Exception) {&#10;                                txtStaffInfo.setText(R.string.invalid_staff)&#10;                            }&#10;                        }&#10;                    } catch (e: NumberFormatException) {&#10;                        txtStaffInfo.setText(R.string.invalid_staff)&#10;                    }&#10;                } else {&#10;                    txtStaffInfo.text = &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.lephucmfg&#10;&#10;import android.os.Bundle&#10;import android.widget.EditText&#10;import android.widget.TextView&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.lifecycle.lifecycleScope&#10;import com.example.lephucmfg.network.RetrofitClient&#10;import com.google.gson.annotations.SerializedName&#10;import kotlinx.coroutines.launch&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;import retrofit2.http.GET&#10;import retrofit2.http.Path&#10;&#10;class MachineLogActivity : AppCompatActivity() {&#10;    interface StaffApi {&#10;        @GET(&quot;/api/GetStaff/{staffNo}&quot;)&#10;        suspend fun getStaff(@Path(&quot;staffNo&quot;) staffNo: Int): StaffInfo?&#10;    }&#10;    data class StaffInfo(&#10;        @SerializedName(&quot;fullName&quot;) val fullName: String?,&#10;        @SerializedName(&quot;workJob&quot;) val workJob: String?,&#10;        @SerializedName(&quot;workPlace&quot;) val workPlace: String?&#10;    )&#10;    interface MachineApi {&#10;        @GET(&quot;/api/GetMachine/{mcName}&quot;)&#10;        suspend fun getMachine(@Path(&quot;mcName&quot;) mcName: String): MachineInfo?&#10;    }&#10;    data class MachineInfo(&#10;        @SerializedName(&quot;model&quot;) val model: String?,&#10;        @SerializedName(&quot;status&quot;) val status: String?&#10;    )&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_machine_log)&#10;&#10;        val edtStaffNo = findViewById&lt;EditText&gt;(R.id.edtStaffNo)&#10;        val txtStaffInfo = findViewById&lt;TextView&gt;(R.id.txtStaffInfo)&#10;        val api = RetrofitClient.retrofitPublic.create(StaffApi::class.java)&#10;&#10;        edtStaffNo.setOnFocusChangeListener { _, hasFocus -&gt;&#10;            if (!hasFocus) {&#10;                val staffNoStr = edtStaffNo.text.toString().trim()&#10;                if (staffNoStr.isNotEmpty()) {&#10;                    try {&#10;                        val staffNo = staffNoStr.toInt()&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val info = api.getStaff(staffNo)&#10;                                if (info != null) {&#10;                                    txtStaffInfo.text = listOfNotNull(info.fullName, info.workJob, info.workPlace).joinToString(&quot;, &quot;)&#10;                                } else {&#10;                                    txtStaffInfo.setText(R.string.invalid_staff)&#10;                                }&#10;                            } catch (e: Exception) {&#10;                                txtStaffInfo.setText(R.string.invalid_staff)&#10;                            }&#10;                        }&#10;                    } catch (e: NumberFormatException) {&#10;                        txtStaffInfo.setText(R.string.invalid_staff)&#10;                    }&#10;                } else {&#10;                    txtStaffInfo.text = &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;        val edtMcName = findViewById&lt;EditText&gt;(R.id.edtMcName)&#10;        val txtMachineInfo = findViewById&lt;TextView&gt;(R.id.txtMachineInfo)&#10;        val machineApi = RetrofitClient.retrofitPublic.create(MachineApi::class.java)&#10;&#10;        edtMcName.setOnFocusChangeListener { _, hasFocus -&gt;&#10;            if (!hasFocus) {&#10;                val mcName = edtMcName.text.toString().trim()&#10;                if (mcName.isNotEmpty()) {&#10;                    lifecycleScope.launch {&#10;                        try {&#10;                            val info = machineApi.getMachine(mcName)&#10;                            if (info != null) {&#10;                                txtMachineInfo.text = listOfNotNull(info.model, info.status).joinToString(&quot;, &quot;)&#10;                            } else {&#10;                                txtMachineInfo.setText(R.string.invalid_staff)&#10;                            }&#10;                        } catch (e: Exception) {&#10;                            txtMachineInfo.setText(R.string.invalid_staff)&#10;                        }&#10;                    }&#10;                } else {&#10;                    txtMachineInfo.text = &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/MainActivity.kt" />
              <option name="originalContent" value="package com.example.lephucmfg&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.widget.Button&#10;import androidx.appcompat.app.AppCompatActivity&#10;&#10;import com.example.lephucmfg.ABTestingActivity&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.frontpage)&#10;&#10;        findViewById&lt;Button&gt;(R.id.btnAbTesting).setOnClickListener {&#10;            startActivity(Intent(this, ABTestingActivity::class.java))&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.lephucmfg&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.widget.Button&#10;import androidx.appcompat.app.AppCompatActivity&#10;&#10;import com.example.lephucmfg.ABTestingActivity&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.frontpage)&#10;&#10;        findViewById&lt;Button&gt;(R.id.btnAbTesting).setOnClickListener {&#10;            startActivity(Intent(this, ABTestingActivity::class.java))&#10;        }&#10;        findViewById&lt;Button&gt;(R.id.btnMachineLog).setOnClickListener {&#10;            startActivity(Intent(this, MachineLogActivity::class.java))&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/network/RetrofitClient.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/network/RetrofitClient.kt" />
              <option name="originalContent" value="package com.example.lephucmfg.network&#10;&#10;import okhttp3.OkHttpClient&#10;import retrofit2.Retrofit&#10;import retrofit2.converter.gson.GsonConverterFactory&#10;import java.util.concurrent.TimeUnit&#10;&#10;object RetrofitClient {&#10;    private val ok = OkHttpClient.Builder()&#10;        .connectTimeout(15, TimeUnit.SECONDS)&#10;        .readTimeout(15, TimeUnit.SECONDS)&#10;        .build()&#10;&#10;    private val retrofit = Retrofit.Builder()&#10;        .baseUrl(&quot;http://192.168.1.77:5080/&quot;)&#10;        .client(ok)&#10;        .addConverterFactory(GsonConverterFactory.create())&#10;        .build()&#10;&#10;    val ab: AbService = retrofit.create(AbService::class.java)&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.lephucmfg.network&#10;&#10;import okhttp3.OkHttpClient&#10;import retrofit2.Retrofit&#10;import retrofit2.converter.gson.GsonConverterFactory&#10;import java.util.concurrent.TimeUnit&#10;&#10;object RetrofitClient {&#10;    private val ok = OkHttpClient.Builder()&#10;        .connectTimeout(15, TimeUnit.SECONDS)&#10;        .readTimeout(15, TimeUnit.SECONDS)&#10;        .build()&#10;&#10;    private val retrofit = Retrofit.Builder()&#10;        .baseUrl(&quot;http://192.168.1.77:5080/&quot;)&#10;        .client(ok)&#10;        .addConverterFactory(GsonConverterFactory.create())&#10;        .build()&#10;&#10;    val ab: AbService = retrofit.create(AbService::class.java)&#10;    val retrofitPublic: Retrofit = retrofit&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_machine_log.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_machine_log.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&gt;&#10;    &lt;LinearLayout&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;24dp&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtStaffNo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Thợ (StaffNo)&quot;&#10;            android:layout_marginTop=&quot;0dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/txtStaffInfo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;&quot;&#10;            android:textColor=&quot;@android:color/holo_red_dark&quot;&#10;            android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtMcName&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Mã máy (McName)&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtJobNo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;CTCViec (JobNo)&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtProOrdNo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;LSX (ProOrdNo)&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtSerial&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Số series&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnSubmit&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Submit&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnScan&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Scan&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&gt;&#10;    &lt;LinearLayout&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;24dp&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtStaffNo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Thợ (StaffNo)&quot;&#10;            android:layout_marginTop=&quot;0dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/txtStaffInfo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;&quot;&#10;            android:textColor=&quot;@android:color/holo_red_dark&quot;&#10;            android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtMcName&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Mã máy (McName)&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/txtMachineInfo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;&quot;&#10;            android:textColor=&quot;@android:color/holo_red_dark&quot;&#10;            android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtJobNo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;CTCViec (JobNo)&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtProOrdNo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;LSX (ProOrdNo)&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edtSerial&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Số series&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnSubmit&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Submit&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnScan&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Scan&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/frontpage.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/frontpage.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:gravity=&quot;center&quot;&#10;    android:padding=&quot;16dp&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnAbTesting&quot;&#10;        android:layout_width=&quot;201dp&quot;&#10;        android:layout_height=&quot;204dp&quot;&#10;        android:text=&quot;ABTesting&quot; /&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:gravity=&quot;center&quot;&#10;    android:padding=&quot;16dp&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnAbTesting&quot;&#10;        android:layout_width=&quot;201dp&quot;&#10;        android:layout_height=&quot;204dp&quot;&#10;        android:text=&quot;ABTesting&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnMachineLog&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Nhật ký máy&quot; /&gt;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;LEPHUCMFG&lt;/string&gt;&#10;    &lt;string name=&quot;scan_qr&quot;&gt;Scan QR&lt;/string&gt;&#10;    &lt;string name=&quot;result_will_show_here&quot;&gt;kết quả&lt;/string&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;LEPHUCMFG&lt;/string&gt;&#10;    &lt;string name=&quot;scan_qr&quot;&gt;Scan QR&lt;/string&gt;&#10;    &lt;string name=&quot;result_will_show_here&quot;&gt;kết quả&lt;/string&gt;&#10;    &lt;string name=&quot;invalid_staff&quot;&gt;không hợp lệ&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>