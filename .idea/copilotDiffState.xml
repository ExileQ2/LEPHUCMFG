<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/MaterialLogActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/lephucmfg/MaterialLogActivity.kt" />
              <option name="originalContent" value="package com.example.lephucmfg&#10;&#10;import android.os.Bundle&#10;import android.widget.Button&#10;import android.widget.EditText&#10;import android.widget.LinearLayout&#10;import android.widget.TextView&#10;import androidx.activity.result.contract.ActivityResultContracts&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.content.ContextCompat&#10;import androidx.lifecycle.lifecycleScope&#10;import com.example.lephucmfg.network.RetrofitClient&#10;import com.example.lephucmfg.utils.LoadingStates&#10;import com.google.gson.annotations.SerializedName&#10;import com.google.zxing.integration.android.IntentIntegrator&#10;import kotlinx.coroutines.launch&#10;import retrofit2.http.GET&#10;import retrofit2.http.Path&#10;&#10;class MaterialLogActivity : AppCompatActivity() {&#10;    // --- API interface for fetching staff info (&quot;Thợ&quot;) ---&#10;    interface StaffApi {&#10;        @GET(&quot;/api/GetStaff/{staffNo}&quot;)&#10;        suspend fun getStaff(@Path(&quot;staffNo&quot;) staffNo: Int): StaffInfo?&#10;    }&#10;&#10;    // --- API interface for fetching heat number info ---&#10;    interface HeatNoApi {&#10;        @GET(&quot;/api/GetInfoHeatNo/{HeatNo}&quot;)&#10;        suspend fun getHeatNoInfo(@Path(&quot;HeatNo&quot;) heatNo: String): List&lt;HeatNoInfo&gt;?&#10;    }&#10;&#10;    // --- API interface for fetching input material info ---&#10;    interface InputMaterialApi {&#10;        @GET(&quot;/api/GetInputMaterial/{HeatNo}&quot;)&#10;        suspend fun getInputMaterial(@Path(&quot;HeatNo&quot;) heatNo: String): List&lt;InputMaterialInfo&gt;?&#10;    }&#10;&#10;    // --- Data class for staff info ---&#10;    data class StaffInfo(&#10;        @SerializedName(&quot;fullName&quot;) val fullName: String?,&#10;        @SerializedName(&quot;workJob&quot;) val workJob: String?,&#10;        @SerializedName(&quot;workPlace&quot;) val workPlace: String?&#10;    )&#10;&#10;    // --- Data class for heat number info ---&#10;    data class HeatNoInfo(&#10;        @SerializedName(&quot;material&quot;) val material: String?,&#10;        @SerializedName(&quot;existQty&quot;) val existQty: Int?,&#10;        @SerializedName(&quot;inpSize1&quot;) val inpSize1: String?,&#10;        @SerializedName(&quot;inpSize2&quot;) val inpSize2: String?,&#10;        @SerializedName(&quot;qty&quot;) val qty: Int?,&#10;        @SerializedName(&quot;notes&quot;) val notes: String?&#10;    )&#10;&#10;    // --- Data class for input material info ---&#10;    data class InputMaterialInfo(&#10;        @SerializedName(&quot;material&quot;) val material: String?,&#10;        @SerializedName(&quot;matPONo&quot;) val matPONo: String?&#10;    )&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_material_log)&#10;&#10;        val edtStaffNo = findViewById&lt;EditText&gt;(R.id.edtStaffNo)&#10;        val txtStaffInfo = findViewById&lt;TextView&gt;(R.id.txtStaffInfo)&#10;        val edtHeatNo = findViewById&lt;EditText&gt;(R.id.edtHeatNo)&#10;        val txtHeatInfo = findViewById&lt;TextView&gt;(R.id.txtHeatInfo)&#10;        val btnScan = findViewById&lt;Button&gt;(R.id.btnScan)&#10;        val layoutHeatInfoButtons = findViewById&lt;LinearLayout&gt;(R.id.layoutHeatInfoButtons)&#10;        val txtSelectedMaterial = findViewById&lt;TextView&gt;(R.id.txtSelectedMaterial)&#10;&#10;        // New material type selection UI elements&#10;        val layoutMaterialTypeButtons = findViewById&lt;LinearLayout&gt;(R.id.layoutMaterialTypeButtons)&#10;        val btnTam = findViewById&lt;Button&gt;(R.id.btnTam)&#10;        val btnCay = findViewById&lt;Button&gt;(R.id.btnCay)&#10;        val btnOng = findViewById&lt;Button&gt;(R.id.btnOng)&#10;&#10;        // New size input fields&#10;        val txtSizeALabel = findViewById&lt;TextView&gt;(R.id.txtSizeALabel)&#10;        val edtSizeA = findViewById&lt;EditText&gt;(R.id.edtSizeA)&#10;        val txtSizeBLabel = findViewById&lt;TextView&gt;(R.id.txtSizeBLabel)&#10;        val edtSizeB = findViewById&lt;EditText&gt;(R.id.edtSizeB)&#10;        val txtSizeCLabel = findViewById&lt;TextView&gt;(R.id.txtSizeCLabel)&#10;        val edtSizeC = findViewById&lt;EditText&gt;(R.id.edtSizeC)&#10;&#10;        // Existing UI elements&#10;        val edtJobNo = findViewById&lt;EditText&gt;(R.id.edtJobNo)&#10;        val txtSize1Label = findViewById&lt;TextView&gt;(R.id.txtSize1Label)&#10;        val edtSize1 = findViewById&lt;EditText&gt;(R.id.edtSize1)&#10;        val txtOldSize1 = findViewById&lt;TextView&gt;(R.id.txtOldSize1)&#10;        val txtSize2Label = findViewById&lt;TextView&gt;(R.id.txtSize2Label)&#10;        val edtSize2 = findViewById&lt;EditText&gt;(R.id.edtSize2)&#10;        val txtOldSize2 = findViewById&lt;TextView&gt;(R.id.txtOldSize2)&#10;        val edtMaterialQty = findViewById&lt;EditText&gt;(R.id.edtMaterialQty)&#10;        val txtOldMaterialQty = findViewById&lt;TextView&gt;(R.id.txtOldMaterialQty)&#10;        val edtProductQty = findViewById&lt;EditText&gt;(R.id.edtProductQty)&#10;        val edtWarehouseArea = findViewById&lt;EditText&gt;(R.id.edtWarehouseArea)&#10;        val btnXuatHang = findViewById&lt;Button&gt;(R.id.btnXuatHang)&#10;        val btnNhapHang = findViewById&lt;Button&gt;(R.id.btnNhapHang)&#10;        val btnXuatHangTop = findViewById&lt;Button&gt;(R.id.btnXuatHangTop)&#10;&#10;        // Track which mode is selected&#10;        var isXuatHangModeSelected = false&#10;        var isNhapHangModeSelected = false&#10;        var selectedMaterialType = &quot;&quot; // &quot;TẤM&quot;, &quot;CÂY&quot;, or &quot;ỐNG&quot;&#10;&#10;        val staffApi = RetrofitClient.retrofitPublic.create(StaffApi::class.java)&#10;        val heatNoApi = RetrofitClient.retrofitPublic.create(HeatNoApi::class.java)&#10;        val inputMaterialApi = RetrofitClient.retrofitPublic.create(InputMaterialApi::class.java)&#10;&#10;        // --- QR Scan integration ---&#10;        val editFields = mapOf(&#10;            &quot;staffNo&quot; to edtStaffNo,&#10;            &quot;heatno&quot; to edtHeatNo,&#10;            // fallback: also allow direct EditText id mapping&#10;            &quot;edtStaffNo&quot; to edtStaffNo,&#10;            &quot;edtHeatNo&quot; to edtHeatNo&#10;        )&#10;        var scanHelper: ScanHelper? = null&#10;        val scanLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result -&gt;&#10;            if (result.resultCode == RESULT_OK) {&#10;                val intent = result.data&#10;                val qrText = intent?.getStringExtra(&quot;SCAN_RESULT&quot;)&#10;                    ?: intent?.getStringExtra(&quot;SCAN_RESULT_ORIGINAL&quot;)&#10;                    ?: intent?.getStringExtra(&quot;SCAN_RESULT_RAW&quot;)&#10;                if (!qrText.isNullOrEmpty()) {&#10;                    scanHelper?.handleScanResult(qrText)&#10;                }&#10;            }&#10;        }&#10;        scanHelper = ScanHelper(this, scanLauncher, editFields, btnScan)&#10;&#10;        // Function to reset button states&#10;        fun resetButtonStates() {&#10;            btnNhapHang.setBackgroundResource(android.R.drawable.btn_default)&#10;            btnXuatHangTop.setBackgroundResource(android.R.drawable.btn_default)&#10;            isNhapHangModeSelected = false&#10;            isXuatHangModeSelected = false&#10;        }&#10;&#10;        // Function to reset material type button states&#10;        fun resetMaterialTypeButtons() {&#10;            btnTam.setBackgroundResource(android.R.drawable.btn_default)&#10;            btnCay.setBackgroundResource(android.R.drawable.btn_default)&#10;            btnOng.setBackgroundResource(android.R.drawable.btn_default)&#10;            selectedMaterialType = &quot;&quot;&#10;        }&#10;&#10;        // Function to clear all form fields&#10;        fun clearAllFields() {&#10;            // Clear text fields&#10;            txtHeatInfo.text = &quot;&quot;&#10;            txtSelectedMaterial.text = &quot;&quot;&#10;            txtSelectedMaterial.visibility = android.view.View.GONE&#10;&#10;            // Hide material type buttons&#10;            layoutMaterialTypeButtons.visibility = android.view.View.GONE&#10;            resetMaterialTypeButtons()&#10;&#10;            // Clear and hide input fields&#10;            edtJobNo.setText(&quot;&quot;)&#10;            edtJobNo.visibility = android.view.View.GONE&#10;&#10;            // Clear and hide old size fields and labels&#10;            txtSize1Label.visibility = android.view.View.GONE&#10;            edtSize1.setText(&quot;&quot;)&#10;            edtSize1.visibility = android.view.View.GONE&#10;            txtOldSize1.text = &quot;&quot;&#10;            txtOldSize1.visibility = android.view.View.GONE&#10;&#10;            txtSize2Label.visibility = android.view.View.GONE&#10;            edtSize2.setText(&quot;&quot;)&#10;            edtSize2.visibility = android.view.View.GONE&#10;            txtOldSize2.text = &quot;&quot;&#10;            txtOldSize2.visibility = android.view.View.GONE&#10;&#10;            // Clear new size fields and labels&#10;            txtSizeALabel.visibility = android.view.View.GONE&#10;            edtSizeA.setText(&quot;&quot;)&#10;            edtSizeA.visibility = android.view.View.GONE&#10;            txtSizeBLabel.visibility = android.view.View.GONE&#10;            edtSizeB.setText(&quot;&quot;)&#10;            edtSizeB.visibility = android.view.View.GONE&#10;            txtSizeCLabel.visibility = android.view.View.GONE&#10;            edtSizeC.setText(&quot;&quot;)&#10;            edtSizeC.visibility = android.view.View.GONE&#10;&#10;            edtMaterialQty.setText(&quot;&quot;)&#10;            edtMaterialQty.visibility = android.view.View.GONE&#10;            txtOldMaterialQty.text = &quot;&quot;&#10;            txtOldMaterialQty.visibility = android.view.View.GONE&#10;&#10;            edtProductQty.setText(&quot;&quot;)&#10;            edtProductQty.visibility = android.view.View.GONE&#10;&#10;            edtWarehouseArea.setText(&quot;&quot;)&#10;            edtWarehouseArea.visibility = android.view.View.GONE&#10;&#10;            // Hide the update button&#10;            btnXuatHang.visibility = android.view.View.GONE&#10;&#10;            // Clear any dynamic buttons&#10;            layoutHeatInfoButtons.removeAllViews()&#10;        }&#10;&#10;        // Nhập phôi button click listener&#10;        btnNhapHang.setOnClickListener {&#10;            resetButtonStates()&#10;            clearAllFields()&#10;            isNhapHangModeSelected = true&#10;            btnNhapHang.setBackgroundResource(R.drawable.button_activated_background)&#10;        }&#10;&#10;        // Xuất phôi button click listener&#10;        btnXuatHangTop.setOnClickListener {&#10;            resetButtonStates()&#10;            clearAllFields()&#10;            isXuatHangModeSelected = true&#10;            btnXuatHangTop.setBackgroundResource(R.drawable.button_activated_background)&#10;        }&#10;&#10;        // Staff number focus change listener&#10;        edtStaffNo.setOnFocusChangeListener { _, hasFocus -&gt;&#10;            if (!hasFocus) {&#10;                val staffNoStr = edtStaffNo.text.toString().trim()&#10;                if (staffNoStr.isNotEmpty()) {&#10;                    try {&#10;                        val staffNo = staffNoStr.toInt()&#10;                        txtStaffInfo.text = getString(R.string.loading)&#10;                        txtStaffInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val info = staffApi.getStaff(staffNo)&#10;                                if (info != null) {&#10;                                    txtStaffInfo.text = listOfNotNull(info.fullName, info.workJob, info.workPlace).joinToString(&quot;, &quot;)&#10;                                    txtStaffInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                                } else {&#10;                                    txtStaffInfo.text = getString(R.string.data_not_found)&#10;                                    txtStaffInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                                }&#10;                            } catch (_: Exception) {&#10;                                txtStaffInfo.text = getString(R.string.data_not_found)&#10;                                txtStaffInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                            }&#10;                        }&#10;                    } catch (_: NumberFormatException) {&#10;                        txtStaffInfo.text = getString(R.string.data_not_found)&#10;                    }&#10;                } else {&#10;                    txtStaffInfo.text = &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;&#10;        // HeatNo focus change listener&#10;        edtHeatNo.setOnFocusChangeListener { _, hasFocus -&gt;&#10;            if (!hasFocus) {&#10;                val heatNoStr = edtHeatNo.text.toString().trim()&#10;                // Clear previous buttons&#10;                layoutHeatInfoButtons.removeAllViews()&#10;&#10;                if (heatNoStr.isNotEmpty()) {&#10;                    // Check if any mode is selected&#10;                    if (!isXuatHangModeSelected &amp;&amp; !isNhapHangModeSelected) {&#10;                        txtHeatInfo.text = &quot;Hãy chọn Nhập phôi hoặc Xuất phôi&quot;&#10;                        txtHeatInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;                        return@setOnFocusChangeListener&#10;                    }&#10;&#10;                    // Only proceed with API call if Xuất phôi is selected&#10;                    if (isXuatHangModeSelected) {&#10;                        txtHeatInfo.text = getString(R.string.loading)&#10;                        txtHeatInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val heatInfoList = heatNoApi.getHeatNoInfo(heatNoStr)&#10;                                if (heatInfoList != null &amp;&amp; heatInfoList.isNotEmpty()) {&#10;                                    txtHeatInfo.text = &quot;&quot;&#10;&#10;                                    // Create clickable buttons for each heat info item&#10;                                    heatInfoList.forEach { info -&gt;&#10;                                        val material = info.material ?: &quot;&quot;&#10;                                        val existQty = info.existQty?.toString() ?: &quot;&quot;&#10;                                        val inpSize1 = info.inpSize1 ?: &quot;&quot;&#10;                                        val inpSize2 = info.inpSize2 ?: &quot;&quot;&#10;                                        val qty = info.qty?.toString() ?: &quot;&quot;&#10;                                        val notes = info.notes ?: &quot;&quot;&#10;&#10;                                        val buttonText = &quot;$material, SL vật liệu $existQty, $inpSize1 * $inpSize2, SL con hàng $qty, $notes&quot;&#10;&#10;                                        val button = Button(this@MaterialLogActivity).apply {&#10;                                            text = buttonText&#10;                                            setBackgroundResource(R.drawable.clickable_button_background)&#10;                                            setTextColor(ContextCompat.getColor(context, android.R.color.white))&#10;                                            layoutParams = LinearLayout.LayoutParams(&#10;                                                LinearLayout.LayoutParams.MATCH_PARENT,&#10;                                                LinearLayout.LayoutParams.WRAP_CONTENT&#10;                                            ).apply {&#10;                                                setMargins(0, 0, 0, 8)&#10;                                            }&#10;&#10;                                            setOnClickListener {&#10;                                                // Show selected material in the TextView&#10;                                                txtSelectedMaterial.text = &quot;Tên vật liệu: $material&quot;&#10;                                                txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                                txtSelectedMaterial.setTextColor(ContextCompat.getColor(context, android.R.color.holo_red_dark))&#10;&#10;                                                // Show size fields as display-only TextViews (no edit fields)&#10;                                                txtOldSize1.text = inpSize1&#10;                                                txtOldSize1.visibility = android.view.View.VISIBLE&#10;                                                txtOldSize1.setTextColor(ContextCompat.getColor(context, android.R.color.holo_red_dark))&#10;                                                edtSize1.visibility = android.view.View.GONE&#10;&#10;                                                txtOldSize2.text = inpSize2&#10;                                                txtOldSize2.visibility = android.view.View.VISIBLE&#10;                                                txtOldSize2.setTextColor(ContextCompat.getColor(context, android.R.color.holo_red_dark))&#10;                                                edtSize2.visibility = android.view.View.GONE&#10;&#10;                                                // Show job details field (Chi tiết công việc)&#10;                                                edtJobNo.hint = &quot;Chi tiết công việc&quot;&#10;                                                edtJobNo.visibility = android.view.View.VISIBLE&#10;&#10;                                                // Show material quantity with label above editable field&#10;                                                txtOldMaterialQty.text = &quot;Số lượng dùng:&quot;&#10;                                                txtOldMaterialQty.visibility = android.view.View.VISIBLE&#10;                                                txtOldMaterialQty.setTextColor(ContextCompat.getColor(context, android.R.color.black))&#10;                                                edtMaterialQty.visibility = android.view.View.VISIBLE&#10;                                                edtMaterialQty.setText(&quot;1&quot;)&#10;&#10;                                                // Hide product quantity and warehouse area fields&#10;                                                edtProductQty.visibility = android.view.View.GONE&#10;                                                edtWarehouseArea.visibility = android.view.View.GONE&#10;&#10;                                                // Show the &quot;Cập nhật&quot; button&#10;                                                btnXuatHang.visibility = android.view.View.VISIBLE&#10;                                            }&#10;                                        }&#10;&#10;                                        layoutHeatInfoButtons.addView(button)&#10;                                    }&#10;                                } else {&#10;                                    txtHeatInfo.text = getString(R.string.data_not_found)&#10;                                    txtHeatInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                                }&#10;                            } catch (_: Exception) {&#10;                                txtHeatInfo.text = getString(R.string.data_not_found)&#10;                                txtHeatInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                            }&#10;                        }&#10;                    } else if (isNhapHangModeSelected) {&#10;                        // For Nhập phôi mode - call GetInputMaterial API and show form for new material input&#10;                        txtHeatInfo.text = getString(R.string.loading)&#10;                        txtHeatInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val inputMaterialList = inputMaterialApi.getInputMaterial(heatNoStr)&#10;                                if (inputMaterialList != null &amp;&amp; inputMaterialList.isNotEmpty()) {&#10;                                    val firstMaterial = inputMaterialList[0]&#10;                                    val material = firstMaterial.material ?: &quot;&quot;&#10;                                    val matPONo = firstMaterial.matPONo ?: &quot;&quot;&#10;&#10;                                    // Show material name field with API data&#10;                                    txtSelectedMaterial.text = &quot;Tên vật liệu: $material, P.O: $matPONo&quot;&#10;                                    txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                    txtSelectedMaterial.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;&#10;                                    txtHeatInfo.text = &quot;&quot;&#10;                                } else {&#10;                                    // No data found, show default&#10;                                    txtSelectedMaterial.text = &quot;Tên vật liệu: chưa có&quot;&#10;                                    txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                    txtSelectedMaterial.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;&#10;                                    txtHeatInfo.text = &quot;&quot;&#10;                                }&#10;                            } catch (_: Exception) {&#10;                                // API call failed, show default&#10;                                txtSelectedMaterial.text = &quot;Tên vật liệu: chưa có&quot;&#10;                                txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                txtSelectedMaterial.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;&#10;                                txtHeatInfo.text = &quot;&quot;&#10;                            }&#10;                        }&#10;&#10;                        // Show material type selection buttons for Nhập phôi mode&#10;                        layoutMaterialTypeButtons.visibility = android.view.View.VISIBLE&#10;&#10;                        // Hide old size fields initially&#10;                        txtSize1Label.visibility = android.view.View.GONE&#10;                        edtSize1.visibility = android.view.View.GONE&#10;                        txtOldSize1.visibility = android.view.View.GONE&#10;                        txtSize2Label.visibility = android.view.View.GONE&#10;                        edtSize2.visibility = android.view.View.GONE&#10;                        txtOldSize2.visibility = android.view.View.GONE&#10;&#10;                        // Hide job and material quantity fields for Nhập phôi mode&#10;                        edtJobNo.visibility = android.view.View.GONE&#10;                        edtMaterialQty.visibility = android.view.View.GONE&#10;                        txtOldMaterialQty.visibility = android.view.View.GONE&#10;                        edtProductQty.visibility = android.view.View.GONE&#10;&#10;                        // Don't show warehouse area and update button until material type is selected&#10;                        edtWarehouseArea.visibility = android.view.View.GONE&#10;                        btnXuatHang.visibility = android.view.View.GONE&#10;                    }&#10;                } else {&#10;                    txtHeatInfo.text = &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;&#10;        // Material type button click listeners&#10;        btnTam.setOnClickListener {&#10;            resetMaterialTypeButtons()&#10;            selectedMaterialType = &quot;TẤM&quot;&#10;            btnTam.setBackgroundResource(R.drawable.button_activated_background)&#10;&#10;            // Show TẤM specific fields&#10;            txtSizeALabel.text = &quot;Nhập chiều rộng&quot;&#10;            txtSizeALabel.visibility = android.view.View.VISIBLE&#10;            edtSizeA.hint = &quot;&quot;&#10;            edtSizeA.setText(&quot;&quot;)&#10;            edtSizeA.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeBLabel.text = &quot;Nhập độ dày&quot;&#10;            txtSizeBLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeB.hint = &quot;&quot;&#10;            edtSizeB.setText(&quot;&quot;)&#10;            edtSizeB.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeCLabel.text = &quot;Nhập chiều dài&quot;&#10;            txtSizeCLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeC.hint = &quot;&quot;&#10;            edtSizeC.setText(&quot;&quot;)&#10;            edtSizeC.visibility = android.view.View.VISIBLE&#10;&#10;            // Show warehouse area and update button&#10;            edtWarehouseArea.visibility = android.view.View.VISIBLE&#10;            btnXuatHang.visibility = android.view.View.VISIBLE&#10;        }&#10;&#10;        btnCay.setOnClickListener {&#10;            resetMaterialTypeButtons()&#10;            selectedMaterialType = &quot;CÂY&quot;&#10;            btnCay.setBackgroundResource(R.drawable.button_activated_background)&#10;&#10;            // Show CÂY specific fields&#10;            txtSizeALabel.text = &quot;Nhập diện tích&quot;&#10;            txtSizeALabel.visibility = android.view.View.VISIBLE&#10;            edtSizeA.hint = &quot;&quot;&#10;            edtSizeA.setText(&quot;D&quot;)&#10;            edtSizeA.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeBLabel.text = &quot;Nhập chiều dài&quot;&#10;            txtSizeBLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeB.hint = &quot;&quot;&#10;            edtSizeB.setText(&quot;&quot;)&#10;            edtSizeB.visibility = android.view.View.VISIBLE&#10;&#10;            // Hide Size C for CÂY&#10;            txtSizeCLabel.visibility = android.view.View.GONE&#10;            edtSizeC.visibility = android.view.View.GONE&#10;&#10;            // Show warehouse area and update button&#10;            edtWarehouseArea.visibility = android.view.View.VISIBLE&#10;            btnXuatHang.visibility = android.view.View.VISIBLE&#10;        }&#10;&#10;        btnOng.setOnClickListener {&#10;            resetMaterialTypeButtons()&#10;            selectedMaterialType = &quot;ỐNG&quot;&#10;            btnOng.setBackgroundResource(R.drawable.button_activated_background)&#10;&#10;            // Show ỐNG specific fields&#10;            txtSizeALabel.text = &quot;Nhập đường kính ngoài&quot;&#10;            txtSizeALabel.visibility = android.view.View.VISIBLE&#10;            edtSizeA.hint = &quot;&quot;&#10;            edtSizeA.setText(&quot;OD&quot;)&#10;            edtSizeA.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeBLabel.text = &quot;Nhập đường kính trong&quot;&#10;            txtSizeBLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeB.hint = &quot;&quot;&#10;            edtSizeB.setText(&quot;ID&quot;)&#10;            edtSizeB.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeCLabel.text = &quot;Nhập chiều dài&quot;&#10;            txtSizeCLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeC.hint = &quot;&quot;&#10;            edtSizeC.setText(&quot;&quot;)&#10;            edtSizeC.visibility = android.view.View.VISIBLE&#10;&#10;            // Show warehouse area and update button&#10;            edtWarehouseArea.visibility = android.view.View.VISIBLE&#10;            btnXuatHang.visibility = android.view.View.VISIBLE&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.lephucmfg&#10;&#10;import android.os.Bundle&#10;import android.widget.Button&#10;import android.widget.EditText&#10;import android.widget.LinearLayout&#10;import android.widget.TextView&#10;import androidx.activity.result.contract.ActivityResultContracts&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.content.ContextCompat&#10;import androidx.lifecycle.lifecycleScope&#10;import com.example.lephucmfg.network.RetrofitClient&#10;import com.example.lephucmfg.utils.LoadingStates&#10;import com.google.gson.annotations.SerializedName&#10;import com.google.zxing.integration.android.IntentIntegrator&#10;import kotlinx.coroutines.launch&#10;import retrofit2.http.GET&#10;import retrofit2.http.Path&#10;&#10;class MaterialLogActivity : AppCompatActivity() {&#10;    // --- API interface for fetching staff info (&quot;Thợ&quot;) ---&#10;    interface StaffApi {&#10;        @GET(&quot;/api/GetStaff/{staffNo}&quot;)&#10;        suspend fun getStaff(@Path(&quot;staffNo&quot;) staffNo: Int): StaffInfo?&#10;    }&#10;&#10;    // --- API interface for fetching heat number info ---&#10;    interface HeatNoApi {&#10;        @GET(&quot;/api/GetInfoHeatNo/{HeatNo}&quot;)&#10;        suspend fun getHeatNoInfo(@Path(&quot;HeatNo&quot;) heatNo: String): List&lt;HeatNoInfo&gt;?&#10;    }&#10;&#10;    // --- API interface for fetching input material info ---&#10;    interface InputMaterialApi {&#10;        @GET(&quot;/api/GetInputMaterial/{HeatNo}&quot;)&#10;        suspend fun getInputMaterial(@Path(&quot;HeatNo&quot;) heatNo: String): List&lt;InputMaterialInfo&gt;?&#10;    }&#10;&#10;    // --- Data class for staff info ---&#10;    data class StaffInfo(&#10;        @SerializedName(&quot;fullName&quot;) val fullName: String?,&#10;        @SerializedName(&quot;workJob&quot;) val workJob: String?,&#10;        @SerializedName(&quot;workPlace&quot;) val workPlace: String?&#10;    )&#10;&#10;    // --- Data class for heat number info ---&#10;    data class HeatNoInfo(&#10;        @SerializedName(&quot;material&quot;) val material: String?,&#10;        @SerializedName(&quot;existQty&quot;) val existQty: Int?,&#10;        @SerializedName(&quot;inpSize1&quot;) val inpSize1: String?,&#10;        @SerializedName(&quot;inpSize2&quot;) val inpSize2: String?,&#10;        @SerializedName(&quot;qty&quot;) val qty: Int?,&#10;        @SerializedName(&quot;notes&quot;) val notes: String?&#10;    )&#10;&#10;    // --- Data class for input material info ---&#10;    data class InputMaterialInfo(&#10;        @SerializedName(&quot;material&quot;) val material: String?,&#10;        @SerializedName(&quot;matPONo&quot;) val matPONo: String?&#10;    )&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_material_log)&#10;&#10;        val edtStaffNo = findViewById&lt;EditText&gt;(R.id.edtStaffNo)&#10;        val txtStaffInfo = findViewById&lt;TextView&gt;(R.id.txtStaffInfo)&#10;        val edtHeatNo = findViewById&lt;EditText&gt;(R.id.edtHeatNo)&#10;        val txtHeatInfo = findViewById&lt;TextView&gt;(R.id.txtHeatInfo)&#10;        val btnScan = findViewById&lt;Button&gt;(R.id.btnScan)&#10;        val layoutHeatInfoButtons = findViewById&lt;LinearLayout&gt;(R.id.layoutHeatInfoButtons)&#10;        val txtSelectedMaterial = findViewById&lt;TextView&gt;(R.id.txtSelectedMaterial)&#10;&#10;        // New material type selection UI elements&#10;        val layoutMaterialTypeButtons = findViewById&lt;LinearLayout&gt;(R.id.layoutMaterialTypeButtons)&#10;        val btnTam = findViewById&lt;Button&gt;(R.id.btnTam)&#10;        val btnCay = findViewById&lt;Button&gt;(R.id.btnCay)&#10;        val btnOng = findViewById&lt;Button&gt;(R.id.btnOng)&#10;&#10;        // New size input fields&#10;        val txtSizeALabel = findViewById&lt;TextView&gt;(R.id.txtSizeALabel)&#10;        val edtSizeA = findViewById&lt;EditText&gt;(R.id.edtSizeA)&#10;        val txtSizeBLabel = findViewById&lt;TextView&gt;(R.id.txtSizeBLabel)&#10;        val edtSizeB = findViewById&lt;EditText&gt;(R.id.edtSizeB)&#10;        val txtSizeCLabel = findViewById&lt;TextView&gt;(R.id.txtSizeCLabel)&#10;        val edtSizeC = findViewById&lt;EditText&gt;(R.id.edtSizeC)&#10;&#10;        // Existing UI elements&#10;        val edtJobNo = findViewById&lt;EditText&gt;(R.id.edtJobNo)&#10;        val txtSize1Label = findViewById&lt;TextView&gt;(R.id.txtSize1Label)&#10;        val edtSize1 = findViewById&lt;EditText&gt;(R.id.edtSize1)&#10;        val txtOldSize1 = findViewById&lt;TextView&gt;(R.id.txtOldSize1)&#10;        val txtSize2Label = findViewById&lt;TextView&gt;(R.id.txtSize2Label)&#10;        val edtSize2 = findViewById&lt;EditText&gt;(R.id.edtSize2)&#10;        val txtOldSize2 = findViewById&lt;TextView&gt;(R.id.txtOldSize2)&#10;        val edtMaterialQty = findViewById&lt;EditText&gt;(R.id.edtMaterialQty)&#10;        val txtOldMaterialQty = findViewById&lt;TextView&gt;(R.id.txtOldMaterialQty)&#10;        val edtNotes = findViewById&lt;EditText&gt;(R.id.edtNotes)&#10;        val edtProductQty = findViewById&lt;EditText&gt;(R.id.edtProductQty)&#10;        val edtWarehouseArea = findViewById&lt;EditText&gt;(R.id.edtWarehouseArea)&#10;        val btnXuatHang = findViewById&lt;Button&gt;(R.id.btnXuatHang)&#10;        val btnNhapHang = findViewById&lt;Button&gt;(R.id.btnNhapHang)&#10;        val btnXuatHangTop = findViewById&lt;Button&gt;(R.id.btnXuatHangTop)&#10;&#10;        // Track which mode is selected&#10;        var isXuatHangModeSelected = false&#10;        var isNhapHangModeSelected = false&#10;        var selectedMaterialType = &quot;&quot; // &quot;TẤM&quot;, &quot;CÂY&quot;, or &quot;ỐNG&quot;&#10;&#10;        val staffApi = RetrofitClient.retrofitPublic.create(StaffApi::class.java)&#10;        val heatNoApi = RetrofitClient.retrofitPublic.create(HeatNoApi::class.java)&#10;        val inputMaterialApi = RetrofitClient.retrofitPublic.create(InputMaterialApi::class.java)&#10;&#10;        // --- QR Scan integration ---&#10;        val editFields = mapOf(&#10;            &quot;staffNo&quot; to edtStaffNo,&#10;            &quot;heatno&quot; to edtHeatNo,&#10;            // fallback: also allow direct EditText id mapping&#10;            &quot;edtStaffNo&quot; to edtStaffNo,&#10;            &quot;edtHeatNo&quot; to edtHeatNo&#10;        )&#10;        var scanHelper: ScanHelper? = null&#10;        val scanLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result -&gt;&#10;            if (result.resultCode == RESULT_OK) {&#10;                val intent = result.data&#10;                val qrText = intent?.getStringExtra(&quot;SCAN_RESULT&quot;)&#10;                    ?: intent?.getStringExtra(&quot;SCAN_RESULT_ORIGINAL&quot;)&#10;                    ?: intent?.getStringExtra(&quot;SCAN_RESULT_RAW&quot;)&#10;                if (!qrText.isNullOrEmpty()) {&#10;                    scanHelper?.handleScanResult(qrText)&#10;                }&#10;            }&#10;        }&#10;        scanHelper = ScanHelper(this, scanLauncher, editFields, btnScan)&#10;&#10;        // Function to reset button states&#10;        fun resetButtonStates() {&#10;            btnNhapHang.setBackgroundResource(android.R.drawable.btn_default)&#10;            btnXuatHangTop.setBackgroundResource(android.R.drawable.btn_default)&#10;            isNhapHangModeSelected = false&#10;            isXuatHangModeSelected = false&#10;        }&#10;&#10;        // Function to reset material type button states&#10;        fun resetMaterialTypeButtons() {&#10;            btnTam.setBackgroundResource(android.R.drawable.btn_default)&#10;            btnCay.setBackgroundResource(android.R.drawable.btn_default)&#10;            btnOng.setBackgroundResource(android.R.drawable.btn_default)&#10;            selectedMaterialType = &quot;&quot;&#10;        }&#10;&#10;        // Function to clear all form fields&#10;        fun clearAllFields() {&#10;            // Clear text fields&#10;            txtHeatInfo.text = &quot;&quot;&#10;            txtSelectedMaterial.text = &quot;&quot;&#10;            txtSelectedMaterial.visibility = android.view.View.GONE&#10;&#10;            // Hide material type buttons&#10;            layoutMaterialTypeButtons.visibility = android.view.View.GONE&#10;            resetMaterialTypeButtons()&#10;&#10;            // Clear and hide input fields&#10;            edtJobNo.setText(&quot;&quot;)&#10;            edtJobNo.visibility = android.view.View.GONE&#10;&#10;            // Clear and hide old size fields and labels&#10;            txtSize1Label.visibility = android.view.View.GONE&#10;            edtSize1.setText(&quot;&quot;)&#10;            edtSize1.visibility = android.view.View.GONE&#10;            txtOldSize1.text = &quot;&quot;&#10;            txtOldSize1.visibility = android.view.View.GONE&#10;&#10;            txtSize2Label.visibility = android.view.View.GONE&#10;            edtSize2.setText(&quot;&quot;)&#10;            edtSize2.visibility = android.view.View.GONE&#10;            txtOldSize2.text = &quot;&quot;&#10;            txtOldSize2.visibility = android.view.View.GONE&#10;&#10;            // Clear new size fields and labels&#10;            txtSizeALabel.visibility = android.view.View.GONE&#10;            edtSizeA.setText(&quot;&quot;)&#10;            edtSizeA.visibility = android.view.View.GONE&#10;            txtSizeBLabel.visibility = android.view.View.GONE&#10;            edtSizeB.setText(&quot;&quot;)&#10;            edtSizeB.visibility = android.view.View.GONE&#10;            txtSizeCLabel.visibility = android.view.View.GONE&#10;            edtSizeC.setText(&quot;&quot;)&#10;            edtSizeC.visibility = android.view.View.GONE&#10;&#10;            edtMaterialQty.setText(&quot;&quot;)&#10;            edtMaterialQty.visibility = android.view.View.GONE&#10;            txtOldMaterialQty.text = &quot;&quot;&#10;            txtOldMaterialQty.visibility = android.view.View.GONE&#10;&#10;            edtNotes.setText(&quot;&quot;)&#10;            edtNotes.visibility = android.view.View.GONE&#10;&#10;            edtProductQty.setText(&quot;&quot;)&#10;            edtProductQty.visibility = android.view.View.GONE&#10;&#10;            edtWarehouseArea.setText(&quot;&quot;)&#10;            edtWarehouseArea.visibility = android.view.View.GONE&#10;&#10;            // Hide the update button&#10;            btnXuatHang.visibility = android.view.View.GONE&#10;&#10;            // Clear any dynamic buttons&#10;            layoutHeatInfoButtons.removeAllViews()&#10;        }&#10;&#10;        // Nhập phôi button click listener&#10;        btnNhapHang.setOnClickListener {&#10;            resetButtonStates()&#10;            clearAllFields()&#10;            isNhapHangModeSelected = true&#10;            btnNhapHang.setBackgroundResource(R.drawable.button_activated_background)&#10;        }&#10;&#10;        // Xuất phôi button click listener&#10;        btnXuatHangTop.setOnClickListener {&#10;            resetButtonStates()&#10;            clearAllFields()&#10;            isXuatHangModeSelected = true&#10;            btnXuatHangTop.setBackgroundResource(R.drawable.button_activated_background)&#10;        }&#10;&#10;        // Staff number focus change listener&#10;        edtStaffNo.setOnFocusChangeListener { _, hasFocus -&gt;&#10;            if (!hasFocus) {&#10;                val staffNoStr = edtStaffNo.text.toString().trim()&#10;                if (staffNoStr.isNotEmpty()) {&#10;                    try {&#10;                        val staffNo = staffNoStr.toInt()&#10;                        txtStaffInfo.text = getString(R.string.loading)&#10;                        txtStaffInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val info = staffApi.getStaff(staffNo)&#10;                                if (info != null) {&#10;                                    txtStaffInfo.text = listOfNotNull(info.fullName, info.workJob, info.workPlace).joinToString(&quot;, &quot;)&#10;                                    txtStaffInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                                } else {&#10;                                    txtStaffInfo.text = getString(R.string.data_not_found)&#10;                                    txtStaffInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                                }&#10;                            } catch (_: Exception) {&#10;                                txtStaffInfo.text = getString(R.string.data_not_found)&#10;                                txtStaffInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                            }&#10;                        }&#10;                    } catch (_: NumberFormatException) {&#10;                        txtStaffInfo.text = getString(R.string.data_not_found)&#10;                    }&#10;                } else {&#10;                    txtStaffInfo.text = &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;&#10;        // HeatNo focus change listener&#10;        edtHeatNo.setOnFocusChangeListener { _, hasFocus -&gt;&#10;            if (!hasFocus) {&#10;                val heatNoStr = edtHeatNo.text.toString().trim()&#10;                // Clear previous buttons&#10;                layoutHeatInfoButtons.removeAllViews()&#10;&#10;                if (heatNoStr.isNotEmpty()) {&#10;                    // Check if any mode is selected&#10;                    if (!isXuatHangModeSelected &amp;&amp; !isNhapHangModeSelected) {&#10;                        txtHeatInfo.text = &quot;Hãy chọn Nhập phôi hoặc Xuất phôi&quot;&#10;                        txtHeatInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;                        return@setOnFocusChangeListener&#10;                    }&#10;&#10;                    // Only proceed with API call if Xuất phôi is selected&#10;                    if (isXuatHangModeSelected) {&#10;                        txtHeatInfo.text = getString(R.string.loading)&#10;                        txtHeatInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val heatInfoList = heatNoApi.getHeatNoInfo(heatNoStr)&#10;                                if (heatInfoList != null &amp;&amp; heatInfoList.isNotEmpty()) {&#10;                                    txtHeatInfo.text = &quot;&quot;&#10;&#10;                                    // Create clickable buttons for each heat info item&#10;                                    heatInfoList.forEach { info -&gt;&#10;                                        val material = info.material ?: &quot;&quot;&#10;                                        val existQty = info.existQty?.toString() ?: &quot;&quot;&#10;                                        val inpSize1 = info.inpSize1 ?: &quot;&quot;&#10;                                        val inpSize2 = info.inpSize2 ?: &quot;&quot;&#10;                                        val qty = info.qty?.toString() ?: &quot;&quot;&#10;                                        val notes = info.notes ?: &quot;&quot;&#10;&#10;                                        val buttonText = &quot;$material, SL vật liệu $existQty, $inpSize1 * $inpSize2, SL con hàng $qty, $notes&quot;&#10;&#10;                                        val button = Button(this@MaterialLogActivity).apply {&#10;                                            text = buttonText&#10;                                            setBackgroundResource(R.drawable.clickable_button_background)&#10;                                            setTextColor(ContextCompat.getColor(context, android.R.color.white))&#10;                                            layoutParams = LinearLayout.LayoutParams(&#10;                                                LinearLayout.LayoutParams.MATCH_PARENT,&#10;                                                LinearLayout.LayoutParams.WRAP_CONTENT&#10;                                            ).apply {&#10;                                                setMargins(0, 0, 0, 8)&#10;                                            }&#10;&#10;                                            setOnClickListener {&#10;                                                // Show selected material in the TextView&#10;                                                txtSelectedMaterial.text = &quot;Tên vật liệu: $material&quot;&#10;                                                txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                                txtSelectedMaterial.setTextColor(ContextCompat.getColor(context, android.R.color.holo_red_dark))&#10;&#10;                                                // Show size fields as display-only TextViews (no edit fields)&#10;                                                txtOldSize1.text = inpSize1&#10;                                                txtOldSize1.visibility = android.view.View.VISIBLE&#10;                                                txtOldSize1.setTextColor(ContextCompat.getColor(context, android.R.color.holo_red_dark))&#10;                                                edtSize1.visibility = android.view.View.GONE&#10;&#10;                                                txtOldSize2.text = inpSize2&#10;                                                txtOldSize2.visibility = android.view.View.VISIBLE&#10;                                                txtOldSize2.setTextColor(ContextCompat.getColor(context, android.R.color.holo_red_dark))&#10;                                                edtSize2.visibility = android.view.View.GONE&#10;&#10;                                                // Show job details field (Chi tiết công việc)&#10;                                                edtJobNo.hint = &quot;Chi tiết công việc&quot;&#10;                                                edtJobNo.visibility = android.view.View.VISIBLE&#10;&#10;                                                // Show material quantity with label above editable field&#10;                                                txtOldMaterialQty.text = &quot;Số lượng dùng:&quot;&#10;                                                txtOldMaterialQty.visibility = android.view.View.VISIBLE&#10;                                                txtOldMaterialQty.setTextColor(ContextCompat.getColor(context, android.R.color.black))&#10;                                                edtMaterialQty.visibility = android.view.View.VISIBLE&#10;                                                edtMaterialQty.setText(&quot;1&quot;)&#10;&#10;                                                // Show notes field&#10;                                                edtNotes.visibility = android.view.View.VISIBLE&#10;&#10;                                                // Hide product quantity and warehouse area fields&#10;                                                edtProductQty.visibility = android.view.View.GONE&#10;                                                edtWarehouseArea.visibility = android.view.View.GONE&#10;&#10;                                                // Show the &quot;Cập nhật&quot; button&#10;                                                btnXuatHang.visibility = android.view.View.VISIBLE&#10;                                            }&#10;                                        }&#10;&#10;                                        layoutHeatInfoButtons.addView(button)&#10;                                    }&#10;                                } else {&#10;                                    txtHeatInfo.text = getString(R.string.data_not_found)&#10;                                    txtHeatInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                                }&#10;                            } catch (_: Exception) {&#10;                                txtHeatInfo.text = getString(R.string.data_not_found)&#10;                                txtHeatInfo.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;                            }&#10;                        }&#10;                    } else if (isNhapHangModeSelected) {&#10;                        // For Nhập phôi mode - call GetInputMaterial API and show form for new material input&#10;                        txtHeatInfo.text = getString(R.string.loading)&#10;                        txtHeatInfo.setTextColor(ContextCompat.getColor(this, android.R.color.holo_red_dark))&#10;&#10;                        lifecycleScope.launch {&#10;                            try {&#10;                                val inputMaterialList = inputMaterialApi.getInputMaterial(heatNoStr)&#10;                                if (inputMaterialList != null &amp;&amp; inputMaterialList.isNotEmpty()) {&#10;                                    val firstMaterial = inputMaterialList[0]&#10;                                    val material = firstMaterial.material ?: &quot;&quot;&#10;                                    val matPONo = firstMaterial.matPONo ?: &quot;&quot;&#10;&#10;                                    // Show material name field with API data&#10;                                    txtSelectedMaterial.text = &quot;Tên vật liệu: $material, P.O: $matPONo&quot;&#10;                                    txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                    txtSelectedMaterial.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;&#10;                                    txtHeatInfo.text = &quot;&quot;&#10;                                } else {&#10;                                    // No data found, show default&#10;                                    txtSelectedMaterial.text = &quot;Tên vật liệu: chưa có&quot;&#10;                                    txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                    txtSelectedMaterial.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;&#10;                                    txtHeatInfo.text = &quot;&quot;&#10;                                }&#10;                            } catch (_: Exception) {&#10;                                // API call failed, show default&#10;                                txtSelectedMaterial.text = &quot;Tên vật liệu: chưa có&quot;&#10;                                txtSelectedMaterial.visibility = android.view.View.VISIBLE&#10;                                txtSelectedMaterial.setTextColor(ContextCompat.getColor(this@MaterialLogActivity, android.R.color.holo_red_dark))&#10;&#10;                                txtHeatInfo.text = &quot;&quot;&#10;                            }&#10;                        }&#10;&#10;                        // Show material type selection buttons for Nhập phôi mode&#10;                        layoutMaterialTypeButtons.visibility = android.view.View.VISIBLE&#10;&#10;                        // Hide old size fields initially&#10;                        txtSize1Label.visibility = android.view.View.GONE&#10;                        edtSize1.visibility = android.view.View.GONE&#10;                        txtOldSize1.visibility = android.view.View.GONE&#10;                        txtSize2Label.visibility = android.view.View.GONE&#10;                        edtSize2.visibility = android.view.View.GONE&#10;                        txtOldSize2.visibility = android.view.View.GONE&#10;&#10;                        // Hide job and material quantity fields for Nhập phôi mode&#10;                        edtJobNo.visibility = android.view.View.GONE&#10;                        edtMaterialQty.visibility = android.view.View.GONE&#10;                        txtOldMaterialQty.visibility = android.view.View.GONE&#10;                        edtProductQty.visibility = android.view.View.GONE&#10;&#10;                        // Don't show warehouse area and update button until material type is selected&#10;                        edtWarehouseArea.visibility = android.view.View.GONE&#10;                        btnXuatHang.visibility = android.view.View.GONE&#10;                    }&#10;                } else {&#10;                    txtHeatInfo.text = &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;&#10;        // Material type button click listeners&#10;        btnTam.setOnClickListener {&#10;            resetMaterialTypeButtons()&#10;            selectedMaterialType = &quot;TẤM&quot;&#10;            btnTam.setBackgroundResource(R.drawable.button_activated_background)&#10;&#10;            // Show TẤM specific fields&#10;            txtSizeALabel.text = &quot;Nhập chiều rộng&quot;&#10;            txtSizeALabel.visibility = android.view.View.VISIBLE&#10;            edtSizeA.hint = &quot;&quot;&#10;            edtSizeA.setText(&quot;&quot;)&#10;            edtSizeA.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeBLabel.text = &quot;Nhập độ dày&quot;&#10;            txtSizeBLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeB.hint = &quot;&quot;&#10;            edtSizeB.setText(&quot;&quot;)&#10;            edtSizeB.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeCLabel.text = &quot;Nhập chiều dài&quot;&#10;            txtSizeCLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeC.hint = &quot;&quot;&#10;            edtSizeC.setText(&quot;&quot;)&#10;            edtSizeC.visibility = android.view.View.VISIBLE&#10;&#10;            // Show warehouse area and update button&#10;            edtWarehouseArea.visibility = android.view.View.VISIBLE&#10;            btnXuatHang.visibility = android.view.View.VISIBLE&#10;        }&#10;&#10;        btnCay.setOnClickListener {&#10;            resetMaterialTypeButtons()&#10;            selectedMaterialType = &quot;CÂY&quot;&#10;            btnCay.setBackgroundResource(R.drawable.button_activated_background)&#10;&#10;            // Show CÂY specific fields&#10;            txtSizeALabel.text = &quot;Nhập diện tích&quot;&#10;            txtSizeALabel.visibility = android.view.View.VISIBLE&#10;            edtSizeA.hint = &quot;&quot;&#10;            edtSizeA.setText(&quot;D&quot;)&#10;            edtSizeA.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeBLabel.text = &quot;Nhập chiều dài&quot;&#10;            txtSizeBLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeB.hint = &quot;&quot;&#10;            edtSizeB.setText(&quot;&quot;)&#10;            edtSizeB.visibility = android.view.View.VISIBLE&#10;&#10;            // Hide Size C for CÂY&#10;            txtSizeCLabel.visibility = android.view.View.GONE&#10;            edtSizeC.visibility = android.view.View.GONE&#10;&#10;            // Show warehouse area and update button&#10;            edtWarehouseArea.visibility = android.view.View.VISIBLE&#10;            btnXuatHang.visibility = android.view.View.VISIBLE&#10;        }&#10;&#10;        btnOng.setOnClickListener {&#10;            resetMaterialTypeButtons()&#10;            selectedMaterialType = &quot;ỐNG&quot;&#10;            btnOng.setBackgroundResource(R.drawable.button_activated_background)&#10;&#10;            // Show ỐNG specific fields&#10;            txtSizeALabel.text = &quot;Nhập đường kính ngoài&quot;&#10;            txtSizeALabel.visibility = android.view.View.VISIBLE&#10;            edtSizeA.hint = &quot;&quot;&#10;            edtSizeA.setText(&quot;OD&quot;)&#10;            edtSizeA.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeBLabel.text = &quot;Nhập đường kính trong&quot;&#10;            txtSizeBLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeB.hint = &quot;&quot;&#10;            edtSizeB.setText(&quot;ID&quot;)&#10;            edtSizeB.visibility = android.view.View.VISIBLE&#10;&#10;            txtSizeCLabel.text = &quot;Nhập chiều dài&quot;&#10;            txtSizeCLabel.visibility = android.view.View.VISIBLE&#10;            edtSizeC.hint = &quot;&quot;&#10;            edtSizeC.setText(&quot;&quot;)&#10;            edtSizeC.visibility = android.view.View.VISIBLE&#10;&#10;            // Show warehouse area and update button&#10;            edtWarehouseArea.visibility = android.view.View.VISIBLE&#10;            btnXuatHang.visibility = android.view.View.VISIBLE&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>